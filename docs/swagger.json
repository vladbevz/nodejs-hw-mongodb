{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Contacts App",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is the API documentation for Contacts App. The API allows users to manage contacts and perform various related operations.\n"
  },
  "tags": [
    {
      "name": "Contacts",
      "description": "Endpoints related to managing contacts."
    },
    {
      "name": "Authentication",
      "description": "Endpoints for user registration, login, and token management."
    }
  ],
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Local development server"
    },
    {
      "url": "https://nodejs-hw-mongodb-yy6k.onrender.com",
      "description": "Production server"
    }
  ],
  "paths": {
    "/contacts": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get a list of contacts",
        "operationId": "getContacts",
        "description": "Retrieve a list of contacts with optional pagination, sorting, and filtering.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination (default: 1).",
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "Number of items per page (default: 10).",
            "schema": {
              "type": "integer",
              "example": 10
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Field to sort by (default: name).",
            "schema": {
              "type": "string",
              "enum": [
                "name",
                "phoneNumber",
                "email"
              ]
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Sort order: ascending (asc) or descending (desc) (default: asc).",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter contacts based on field values.",
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of contacts.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Contact"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/Unauthorized"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Create a new contact",
        "operationId": "createContact",
        "description": "Add a new contact to the database.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Contact successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Validation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/BadRequest"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/contacts/{id}": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get a contact by ID",
        "operationId": "getContactById",
        "description": "Retrieve a specific contact by its unique ID.",
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the contact.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Contact successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "404": {
            "description": "Contact not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/NotFound"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Contacts"
        ],
        "summary": "Update a contact by ID",
        "operationId": "updateContact",
        "description": "Update an existing contact's details using its ID.",
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the contact.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contact successfully updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "404": {
            "description": "Contact not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/NotFound"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "summary": "Delete a contact by ID",
        "operationId": "deleteContact",
        "description": "Remove a contact from the database using its ID.",
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the contact.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Contact successfully deleted."
          },
          "404": {
            "description": "Contact not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/NotFound"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "Contact": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "64b1f7e2b23e4c001bb12345"
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "johndoe@example.com"
          },
          "phoneNumber": {
            "type": "string",
            "example": 1234567890
          },
          "photo": {
            "type": "string",
            "format": "url",
            "example": "https://example.com/photo.jpg"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-12-07T15:03:46.000Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-12-07T15:03:46.000Z"
          }
        },
        "required": [
          "id",
          "name",
          "email",
          "phoneNumber"
        ]
      },
      "ContactInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "phoneNumber": {
            "type": "string",
            "example": "+123456789"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "john.doe@example.com"
          },
          "photo": {
            "type": "string",
            "format": "url",
            "example": "https://example.com/photo.jpg"
          }
        },
        "required": [
          "name",
          "phoneNumber",
          "email"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "name",
          "email"
        ]
      }
    },
    "responses": {
      "NotFound": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Not found"
          }
        }
      },
      "BadRequest": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Bad request"
          }
        }
      },
      "Unauthorized": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Unauthorized"
          }
        }
      }
    }
  }
}
